{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pizza-Valley\\\\client\\\\src\\\\screens\\\\OrdersScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserOrders } from '../actions/orderActions';\nimport Success from '../components/Success';\nimport Error from '../components/Error';\nimport Loading from '../components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrdersScreen() {\n  _s();\n\n  const dispatch = useDispatch();\n  const orderstate = useSelector(state => state.getUserOrdersReducer);\n  const {\n    orders,\n    error,\n    loading\n  } = orderstate;\n  useEffect(() => {\n    dispatch(getUserOrders());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: '30px'\n      },\n      children: \"My Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: loading !== null && loading !== void 0 ? loading : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrdersScreen, \"zAJnE3/Eza4UnZrI07ihjLH86dM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = OrdersScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersScreen\");","map":{"version":3,"sources":["D:/Pizza-Valley/client/src/screens/OrdersScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getUserOrders","Success","Error","Loading","OrdersScreen","dispatch","orderstate","state","getUserOrdersReducer","orders","error","loading","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,aAAR,QAA4B,yBAA5B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAEnC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,UAAU,GAAGP,WAAW,CAACQ,KAAK,IAAEA,KAAK,CAACC,oBAAd,CAA9B;AACA,QAAM;AAACC,IAAAA,MAAD;AAAUC,IAAAA,KAAV;AAAkBC,IAAAA;AAAlB,MAA6BL,UAAnC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AAEZQ,IAAAA,QAAQ,CAACL,aAAa,EAAd,CAAR;AAEH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAACY,QAAAA,QAAQ,EAAE;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAEKD,OAFL,aAEKA,OAFL,cAEKA,OAFL,gBAEiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAFjB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAtBuBP,Y;UAEHN,W,EACEC,W;;;KAHCK,Y","sourcesContent":["import React, {useState , useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getUserOrders} from '../actions/orderActions';\r\nimport Success from '../components/Success';\r\nimport Error from '../components/Error';\r\nimport Loading from '../components/Loading';\r\n\r\nexport default function OrdersScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const orderstate = useSelector(state=>state.getUserOrdersReducer)\r\n    const {orders , error , loading} = orderstate\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(getUserOrders())\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{fontSize: '30px'}}>My Orders</h2>\r\n            <div className=\"row\">\r\n\r\n                {loading ?? (<Loading />)}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}