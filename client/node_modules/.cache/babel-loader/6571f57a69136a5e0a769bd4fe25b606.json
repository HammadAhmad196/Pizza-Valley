{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { getAllPizzasReducer } from '../reducers/pizzaReducers';\nimport { cartReducer } from '../reducers/cartReducer';\nimport { loginUserReducer, registerUserReducer } from '../reducers/userReducer';\nimport { placeOrderReducer, getUserOrdersReducer } from '../reducers/orderReducer';\nconst finalReducer = combineReducers({\n  getAllPizzasReducer: getAllPizzasReducer,\n  cartReducer: cartReducer,\n  registerUserReducer: registerUserReducer,\n  loginUserReducer: loginUserReducer,\n  placeOrderReducer: placeOrderReducer,\n  getUserO: getUserOrders\n});\nconst cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null;\nconst initialState = {\n  cartReducer: {\n    cartItems: cartItems\n  },\n  loginUserReducer: {\n    currentUser: currentUser\n  }\n};\nconst composeEnhancers = composeWithDevTools({});\nconst store = createStore(finalReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["D:/Pizza-Valley/client/src/store/store.js"],"names":["combineReducers","createStore","applyMiddleware","thunk","composeWithDevTools","getAllPizzasReducer","cartReducer","loginUserReducer","registerUserReducer","placeOrderReducer","getUserOrdersReducer","finalReducer","getUserO","getUserOrders","cartItems","localStorage","getItem","JSON","parse","currentUser","initialState","composeEnhancers","store"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,yBAAtD;AACA,SAASC,iBAAT,EAA6BC,oBAA7B,QAAwD,0BAAxD;AAGA,MAAMC,YAAY,GAAGX,eAAe,CAAC;AACjCK,EAAAA,mBAAmB,EAAEA,mBADY;AAEjCC,EAAAA,WAAW,EAAEA,WAFoB;AAGjCE,EAAAA,mBAAmB,EAAEA,mBAHY;AAIjCD,EAAAA,gBAAgB,EAAEA,gBAJe;AAKjCE,EAAAA,iBAAiB,EAAEA,iBALc;AAMjCG,EAAAA,QAAQ,EAAEC;AANuB,CAAD,CAApC;AASA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAtG;AACA,MAAMG,WAAW,GAAGJ,YAAY,CAACC,OAAb,CAAqB,aAArB,IAAsCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAtC,GAAwF,IAA5G;AAGA,MAAMI,YAAY,GAAG;AACjBd,EAAAA,WAAW,EAAE;AACTQ,IAAAA,SAAS,EAAEA;AADF,GADI;AAIjBP,EAAAA,gBAAgB,EAAE;AACdY,IAAAA,WAAW,EAAEA;AADC;AAJD,CAArB;AASA,MAAME,gBAAgB,GAAGjB,mBAAmB,CAAC,EAAD,CAA5C;AAEA,MAAMkB,KAAK,GAAGrB,WAAW,CAACU,YAAD,EAAeS,YAAf,EAA6BC,gBAAgB,CAACnB,eAAe,CAACC,KAAD,CAAhB,CAA7C,CAAzB;AAEA,eAAemB,KAAf","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { getAllPizzasReducer } from '../reducers/pizzaReducers';\r\nimport { cartReducer } from '../reducers/cartReducer';\r\nimport { loginUserReducer, registerUserReducer } from '../reducers/userReducer';\r\nimport { placeOrderReducer , getUserOrdersReducer} from '../reducers/orderReducer';\r\n\r\n\r\nconst finalReducer = combineReducers({\r\n    getAllPizzasReducer: getAllPizzasReducer,\r\n    cartReducer: cartReducer,\r\n    registerUserReducer: registerUserReducer,\r\n    loginUserReducer: loginUserReducer,\r\n    placeOrderReducer: placeOrderReducer,\r\n    getUserO: getUserOrders\r\n})\r\n\r\nconst cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null\r\n\r\n\r\nconst initialState = {\r\n    cartReducer: {\r\n        cartItems: cartItems\r\n    },\r\n    loginUserReducer: {\r\n        currentUser: currentUser\r\n    }\r\n}\r\n\r\nconst composeEnhancers = composeWithDevTools({})\r\n\r\nconst store = createStore(finalReducer, initialState, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport default store "]},"metadata":{},"sourceType":"module"}