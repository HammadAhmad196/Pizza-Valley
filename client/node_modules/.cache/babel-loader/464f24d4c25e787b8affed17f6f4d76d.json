{"ast":null,"code":"import axios from \"axios\";\nexport const placeOrder = (token, subtotal) => async (dispatch, getState) => {\n  dispatch({\n    type: 'PLACE_ORDER-REQUEST'\n  });\n  const currentUser = getState().loginUserReducer.currentUser;\n  const cartItems = getState().cartReducer.cartItems;\n\n  try {\n    dispatch({\n      type: 'PLACE_ORDER-SUCCESS'\n    });\n    const response = await axios.post('/api/orders/placeOrder', {\n      token,\n      subtotal,\n      currentUser,\n      cartItems\n    });\n    console.log(response);\n  } catch (error) {\n    dispatch({\n      type: 'PLACE_ORDER-FAILED'\n    });\n    console.log(error);\n  }\n};\nexport const getUserOrders = () => async (dispatch, getState) => {\n  const currentUser = get;\n  dispatch({\n    type: 'GET_USER_ORDERS-REQUEST'\n  });\n\n  try {\n    const response = await axios.get('/api/orders/getuserorders');\n    console.log(response);\n    dispatch({\n      type: 'GET_USER_ORDERS_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_USER_ORDERS_FAILED',\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["D:/Pizza-Valley/client/src/actions/orderActions.js"],"names":["axios","placeOrder","token","subtotal","dispatch","getState","type","currentUser","loginUserReducer","cartItems","cartReducer","response","post","console","log","error","getUserOrders","get","payload","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,UAAU,GAAC,CAACC,KAAD,EAAQC,QAAR,KAAmB,OAAOC,QAAP,EAAiBC,QAAjB,KAA4B;AAGnED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACA,QAAMC,WAAW,GAAGF,QAAQ,GAAGG,gBAAX,CAA4BD,WAAhD;AACA,QAAME,SAAS,GAAGJ,QAAQ,GAAGK,WAAX,CAAuBD,SAAzC;;AAEA,MAAI;AACAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAMK,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,wBAAX,EAAqC;AAAEV,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBI,MAAAA,WAAnB;AAAgCE,MAAAA;AAAhC,KAArC,CAAvB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZX,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAEH;AAEJ,CAjBM;AAoBP,OAAO,MAAMC,aAAa,GAAC,MAAI,OAAOZ,QAAP,EAAkBC,QAAlB,KAA6B;AAExD,QAAME,WAAW,GAAGU,GAApB;AACAb,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAR;;AAEA,MAAG;AAEC,UAAMK,QAAQ,GAAE,MAAMX,KAAK,CAACiB,GAAN,CAAU,2BAAV,CAAtB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAP,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,yBAAP;AAAkCY,MAAAA,OAAO,EAAEP,QAAQ,CAACQ;AAApD,KAAD,CAAR;AAEH,GAND,CAME,OAAOJ,KAAP,EAAc;AAEZX,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,wBAAP;AAAiCY,MAAAA,OAAO,EAAEH;AAA1C,KAAD,CAAR;AACH;AAEJ,CAhBM","sourcesContent":["import axios from \"axios\"\r\nexport const placeOrder=(token, subtotal)=>async (dispatch, getState)=>{\r\n\r\n\r\n    dispatch({ type: 'PLACE_ORDER-REQUEST' })\r\n    const currentUser = getState().loginUserReducer.currentUser\r\n    const cartItems = getState().cartReducer.cartItems\r\n\r\n    try {\r\n        dispatch({ type: 'PLACE_ORDER-SUCCESS' })\r\n        const response = await axios.post('/api/orders/placeOrder', { token, subtotal, currentUser, cartItems })\r\n        console.log(response)\r\n    } catch (error) {\r\n        dispatch({ type: 'PLACE_ORDER-FAILED' })\r\n        console.log(error)\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getUserOrders=()=>async (dispatch , getState)=>{\r\n\r\n    const currentUser = get\r\n    dispatch({type: 'GET_USER_ORDERS-REQUEST'})\r\n\r\n    try{\r\n\r\n        const response =await axios.get('/api/orders/getuserorders') \r\n        console.log(response)\r\n        dispatch({type: 'GET_USER_ORDERS_SUCCESS', payload: response.data})\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({type: 'GET_USER_ORDERS_FAILED', payload: error})\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}