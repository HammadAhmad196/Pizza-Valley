{"ast":null,"code":"import axios from 'axios';\nexport const getAllPizzas = () => async dispatch => {\n  dispatch({\n    type: 'GET_PIZZAS_REQUEST'\n  });\n\n  try {\n    const response = await axios.get('/api/pizzas/getallpizzas');\n    console.log(response);\n    dispatch({\n      type: 'GET_PIZZAS_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_PIZZAS_FAILED',\n      payload: error\n    });\n  }\n};\nexport const filterPizzas = (searchkey, category) => async dispatch => {\n  var filteredPizzas;\n  dispatch({\n    type: 'GET_PIZZAS_REQUEST'\n  });\n\n  try {\n    const response = await axios.get('/api/pizzas/getallpizzas');\n    filteredPizzas = response.data.filter(pizza => pizza.name.toLowerCase().includes(searchkey));\n    dispatch({\n      type: 'GET_PIZZAS_SUCCESS',\n      payload: filterPizzas()\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_PIZZAS_FAILED',\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["D:/Pizza-Valley/client/src/actions/pizzaActions.js"],"names":["axios","getAllPizzas","dispatch","type","response","get","console","log","payload","data","error","filterPizzas","searchkey","category","filteredPizzas","filter","pizza","name","toLowerCase","includes"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,YAAY,GAAC,MAAI,MAAMC,QAAN,IAAgB;AAE1CA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAR;;AAEA,MAAG;AAEC,UAAMC,QAAQ,GAAE,MAAMJ,KAAK,CAACK,GAAN,CAAU,0BAAV,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAF,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,oBAAP;AAA6BK,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAA/C,KAAD,CAAR;AAEH,GAND,CAME,OAAOC,KAAP,EAAc;AAEZR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,mBAAP;AAA4BK,MAAAA,OAAO,EAAEE;AAArC,KAAD,CAAR;AACH;AAEJ,CAfM;AAmBP,OAAO,MAAMC,YAAY,GAAC,CAACC,SAAD,EAAaC,QAAb,KAAwB,MAAMX,QAAN,IAAgB;AAE9D,MAAIY,cAAJ;AACAZ,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAR;;AAEA,MAAG;AAEC,UAAMC,QAAQ,GAAE,MAAMJ,KAAK,CAACK,GAAN,CAAU,0BAAV,CAAtB;AACAS,IAAAA,cAAc,GAAGV,QAAQ,CAACK,IAAT,CAAcM,MAAd,CAAqBC,KAAK,IAAEA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCP,SAAlC,CAA5B,CAAjB;AACAV,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,oBAAP;AAA6BK,MAAAA,OAAO,EAAEG,YAAY;AAAlD,KAAD,CAAR;AAEH,GAND,CAME,OAAOD,KAAP,EAAc;AAEZR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,mBAAP;AAA4BK,MAAAA,OAAO,EAAEE;AAArC,KAAD,CAAR;AACH;AAEJ,CAhBM","sourcesContent":["import axios from 'axios';\r\nexport const getAllPizzas=()=>async dispatch=>{\r\n\r\n    dispatch({type: 'GET_PIZZAS_REQUEST'})\r\n\r\n    try{\r\n\r\n        const response =await axios.get('/api/pizzas/getallpizzas') \r\n        console.log(response)\r\n        dispatch({type: 'GET_PIZZAS_SUCCESS', payload: response.data})\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({type: 'GET_PIZZAS_FAILED', payload: error})\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const filterPizzas=(searchkey , category)=>async dispatch=>{\r\n\r\n    var filteredPizzas;\r\n    dispatch({type: 'GET_PIZZAS_REQUEST'})\r\n\r\n    try{\r\n\r\n        const response =await axios.get('/api/pizzas/getallpizzas')\r\n        filteredPizzas = response.data.filter(pizza=>pizza.name.toLowerCase().includes(searchkey))\r\n        dispatch({type: 'GET_PIZZAS_SUCCESS', payload: filterPizzas()})\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({type: 'GET_PIZZAS_FAILED', payload: error})\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}